- hosts:
    localhost
  connection: local
  tasks:

  - name: delete cert files
    file:
      state: absent
      path: /home/nines/ansible/fgtcert/buffer/

- hosts:
    docker01

  vars:
    pk_fp: 'buffer/privkey.pem'
    pk_string: "{{ lookup( 'file', pk_fp) }}" 
    cert_fp: 'buffer/fullchain.pem'
    cert_string: "{{ lookup( 'file', cert_fp) }}"

  tasks:

  - name: Fetch cert from docker01
 #   become: yes
    run_once: yes
    fetch: src=/home/tems/docker/swag/config/keys/letsencrypt/fullchain.pem dest=/home/nines/ansible/fgtcert/buffer/ flat=yes
    when: inventory_hostname == 'docker01.cc4r.local'

  - name: Fetch privkey from docker01
#    become: yes
    run_once: yes
    fetch: src=/home/tems/docker/swag/config/keys/letsencrypt/privkey.pem dest=/home/nines/ansible/fgtcert/buffer/ flat=yes
    when: inventory_hostname == 'docker01.cc4r.local'

  - name: b64 encode cert
    copy:
      dest: 'buffer/cert_b64.pem'
      content: "{{ cert_string }}"
    become: no
    delegate_to: localhost
 
  - name: b64 encode privkey
    copy:
      dest: 'buffer/key_b64.pem'
      content: "{{ pk_string }}"
    become: no
    delegate_to: localhost


- hosts:
    fortigate_tems

  collections:
  - fortinet.fortios
  connection: httpapi
  vars:
   vdom: root
   ansible_httpapi_use_ssl: yes
   ansible_httpapi_validate_certs: no
   ansible_httpapi_port: 444
   private_key_filepath: 'buffer/privkey.pem'
   private_key_string: "{{ lookup( 'file', private_key_filepath) | b64encode }}"
   cert_filepath: 'buffer/fullchain.pem'
   cert_string: "{{ lookup( 'file', cert_filepath) | b64encode }}"

  tasks:

  - name: set deep inspection cert ems
    fortios_firewall_ssl_ssh_profile:
      state: present
      vdom: "{{ vdom }}"
      access_token: "{{ fortios_access_token }}"
      firewall_ssl_ssh_profile:
        name: "tems-DI-ems"
        server_cert: "Fortinet_Factory"

  - name: set deep inspection cert webserver
    fortios_firewall_ssl_ssh_profile:
      state: present
      vdom: "{{ vdom }}"
      access_token: "{{ fortios_access_token }}"
      firewall_ssl_ssh_profile:
        name: "tems-DI-webserver"
        server_cert: "Fortinet_Factory"

  - name: set deep inspection cert nextcloud
    fortios_firewall_ssl_ssh_profile:
      state: present
      vdom: "{{ vdom }}"
      access_token: "{{ fortios_access_token }}"
      firewall_ssl_ssh_profile:
        name: "tems-DI-nextcloud"
        server_cert: "Fortinet_Factory"

  - name: set deep inspection cert seppmail
    fortios_firewall_ssl_ssh_profile:
      state: present
      vdom: "V_BACKUP"
      access_token: "{{ fortios_access_token }}"
      firewall_ssl_ssh_profile:
        name: "tems-DI-seppmail"
        server_cert: "Fortinet_Factory"

  - name: set ssl vpn cert
    fortios_vpn_ssl_settings:
      vdom: "{{ vdom }}"
      access_token: "{{ fortios_access_token }}"
      vpn_ssl_settings:
        servercert: "Fortinet_Factory"

  - name: Delete old vert
    fortios_vpn_certificate_local:
      vdom: "{{ vdom }}"
      state: "absent"
      access_token: "{{ fortios_access_token }}"
      vpn_certificate_local:
        name: "tems.at"

  - name: upload cert
    ignore_errors: yes
    fortinet.fortios.fortios_monitor:
      enable_log: true
      vdom: "{{ vdom }}"
      access_token: "{{ fortios_access_token }}"
      selector: 'import.vpn-certificate.local'
      params:
          certname: "tems.at"
          key_file_content: "{{ private_key_string }}"
          file_content: "{{ cert_string }}" 
          scope: global
          type: regular

  - name: set ssl vpn cert root vdom
    fortios_vpn_ssl_settings:
      vdom: "{{ vdom }}"
      access_token: "{{ fortios_access_token }}"
      vpn_ssl_settings:
        servercert: "tems.at"

  - name: set ssl vpn cert backup vdom
    fortios_vpn_ssl_settings:
      vdom: "V_BACKUP"
      access_token: "{{ fortios_access_token }}"
      vpn_ssl_settings:
        servercert: "tems.at"

  - name: set deep inspection cert ems
    fortios_firewall_ssl_ssh_profile:
      vdom: "{{ vdom }}"
      access_token: "{{ fortios_access_token }}"
      state: present
      firewall_ssl_ssh_profile:
        name: "tems-DI-ems"
        server_cert: "tems.at"

  - name: set deep inspection cert webserver
    fortios_firewall_ssl_ssh_profile:
      vdom: "{{ vdom }}"
      access_token: "{{ fortios_access_token }}"
      state: present
      firewall_ssl_ssh_profile:
        name: "tems-DI-webserver"
        server_cert: "tems.at"

  - name: set deep inspection cert seppmail
    fortios_firewall_ssl_ssh_profile:
      vdom: "V_BACKUP"
      access_token: "{{ fortios_access_token }}"
      state: present
      firewall_ssl_ssh_profile:
        name: "tems-DI-seppmail"
        server_cert: "tems.at"


  - name: set deep inspection cert nextcloud
    fortios_firewall_ssl_ssh_profile:
      vdom: "{{ vdom }}"
      access_token: "{{ fortios_access_token }}"
      state: present
      firewall_ssl_ssh_profile:
        name: "tems-DI-nextcloud"
        server_cert: "tems.at"

- hosts:
    localhost
  connection: local
  tasks:

  - name: delete cert files
    file:
      state: absent
      path: /home/nines/ansible/fgtcert/buffer/
